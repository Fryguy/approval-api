swagger: '2.0'
info:
  title: Insights Service Approval APIs
  description: APIs to query approval service
  version: 1.0.0
  contact:
    email: support@redhat.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
host: 'localhost:3000'
tags:
  - name: admins
    description: Admin-only APIs
  - name: approvers
    description: Approvers APIs
  - name: users
    description: Regular users APIs
schemes:
  - http
paths:
  # Endpoints for actions
  '/actions':
    get:
      tags:
        - admins
        - approvers
      summary: Return a list of approver actions
      description: Return a list of approver actions
      operationId: fetchActions
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/offset'
      responses:
        '200':
          description: Success
          headers:
            X-total-count:
              type: integer
              description: Total number of items
          schema:
            type: array
            items:
              $ref: '#/definitions/Action'
        '400':
          $ref: '#/responses/400BadRequestResponse'
        '401':
          $ref: '#/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/responses/403ForbiddenResponse'
        '404':
          $ref: '#/responses/404NotFoundResponse'
        '422':
          $ref: '#/responses/422UnprocessableEntityResponse'
  '/stages/{stage_id}/actions':
    post:
      tags:
        - admins
        - approvers
      summary: Add an action to a given stage
      description: Add an action to a given stage
      operationId: addAction
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/stage_id'
        - in: body
          name: body
          description: Action object that will be added
          required: true
          schema:
            $ref: '#/definitions/Action'
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/Action'
        '400':
          $ref: '#/responses/400BadRequestResponse'
        '401':
          $ref: '#/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/responses/403ForbiddenResponse'
        '404':
          $ref: '#/responses/404NotFoundResponse'
        '422':
          $ref: '#/responses/422UnprocessableEntityResponse'
  '/actions/{id}':
    get:
      tags:
        - admins
        - approvers
      summary: Return an approver action by id
      description: Return an approver action by id
      operationId: fetchActionById
      parameters:
        - $ref: '#/parameters/id'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Action'
        '400':
          $ref: '#/responses/400BadRequestResponse'
        '401':
          $ref: '#/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/responses/403ForbiddenResponse'
        '404':
          $ref: '#/responses/404NotFoundResponse'
        '422':
          $ref: '#/responses/422UnprocessableEntityResponse'
  '/groups':
    get:
      tags:
        - admins
      summary: Return all approver groups
      description: Return all approver groups
      operationId: fetchGroups
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/offset'
      responses:
        '200':
          description: Success
          headers:
            X-total-count:
              type: integer
              description: Total number of items
          schema:
            type: array
            items:
              $ref: '#/definitions/Group'
        '400':
          $ref: '#/responses/400BadRequestResponse'
        '401':
          $ref: '#/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/responses/403ForbiddenResponse'
        '404':
          $ref: '#/responses/404NotFoundResponse'
        '422':
          $ref: '#/responses/422UnprocessableEntityResponse'
    post:
      tags:
        - admins
      summary: Add a new approver group by given parameters
      description: Add a new approver group by given parameters
      operationId: addGroup
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Parameters need to create approver group
          required: true
          schema:
            $ref: '#/definitions/Group'
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/Group'
        '400':
          $ref: '#/responses/400BadRequestResponse'
        '401':
          $ref: '#/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/responses/403ForbiddenResponse'
        '404':
          $ref: '#/responses/404NotFoundResponse'
        '422':
          $ref: '#/responses/422UnprocessableEntityResponse'
  '/groups/{id}':
    get:
      tags:
        - admins
      summary: Return approver group by given id
      description: Return approver group by given id
      operationId: fetchGroupById
      parameters:
        - $ref: '#/parameters/id'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Group'
        '400':
          $ref: '#/responses/400BadRequestResponse'
        '401':
          $ref: '#/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/responses/403ForbiddenResponse'
        '404':
          $ref: '#/responses/404NotFoundResponse'
        '422':
          $ref: '#/responses/422UnprocessableEntityResponse'
    patch:
      tags:
        - admins
      summary: Update an approver group by given id
      description: Update an approver group by given id
      operationId: updateGroup
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/id'
        - in: body
          name: body
          description: Approver group object that needs to be updated
          required: true
          schema:
            $ref: '#/definitions/Group'
      responses:
        '400':
          $ref: '#/responses/400BadRequestResponse'
        '401':
          $ref: '#/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/responses/403ForbiddenResponse'
        '404':
          $ref: '#/responses/404NotFoundResponse'
        '422':
          $ref: '#/responses/422UnprocessableEntityResponse'
    delete:
      tags:
        - admins
      summary: Delete approver group by given id
      description: Delete group by given id
      operationId: removeGroup
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/id'
      responses:
        '400':
          $ref: '#/responses/400BadRequestResponse'
        '401':
          $ref: '#/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/responses/403ForbiddenResponse'
        '404':
          $ref: '#/responses/404NotFoundResponse'
        '422':
          $ref: '#/responses/422UnprocessableEntityResponse'
  '/requests':
    get:
      tags:
        - admins
      summary: Return an array of approval requests
      description: Return an array of requests
      operationId: fetchRequests
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/decision'
        - $ref: '#/parameters/state'
        - $ref: '#/parameters/requester'
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/offset'
      responses:
        '200':
          description: Success
          headers:
            X-total-count:
              type: integer
              description: Total number of items
          schema:
            type: array
            items:
              $ref: '#/definitions/Request'
        '400':
          $ref: '#/responses/400BadRequestResponse'
        '401':
          $ref: '#/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/responses/403ForbiddenResponse'
        '404':
          $ref: '#/responses/404NotFoundResponse'
        '422':
          $ref: '#/responses/422UnprocessableEntityResponse'
  '/workflows/{workflow_id}/requests':
    get:
      tags:
        - admins
      summary: Return approval requests by given workflow id
      description: Return approval requests by given workflow id
      operationId: fetchWorkflowRequests
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/workflow_id'
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/offset'
      responses:
        '200':
          description: Success
          headers:
            X-total-count:
              type: integer
              description: Total number of items
          schema:
            type: array
            items:
              $ref: '#/definitions/Request'
        '400':
          $ref: '#/responses/400BadRequestResponse'
        '401':
          $ref: '#/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/responses/403ForbiddenResponse'
        '404':
          $ref: '#/responses/404NotFoundResponse'
        '422':
          $ref: '#/responses/422UnprocessableEntityResponse'
    post:
      tags:
        - users
      summary: Add an approval request by given parameters
      description: Add an approval request by given parameters
      operationId: addRequest
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/workflow_id'
        - in: body
          name: body
          description: Parameters need to create a request
          required: true
          schema:
            $ref: '#/definitions/Request'
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/Request'
        '400':
          $ref: '#/responses/400BadRequestResponse'
        '401':
          $ref: '#/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/responses/403ForbiddenResponse'
        '404':
          $ref: '#/responses/404NotFoundResponse'
        '422':
          $ref: '#/responses/422UnprocessableEntityResponse'
  '/requests/{id}':
    get:
      tags:
        - users
      summary: Return an approval request by given id
      description: Return an approval request by given id
      operationId: fetchRequestById
      parameters:
        - $ref: '#/parameters/id'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Request'
        '400':
          $ref: '#/responses/400BadRequestResponse'
        '401':
          $ref: '#/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/responses/403ForbiddenResponse'
        '404':
          $ref: '#/responses/404NotFoundResponse'
        '422':
          $ref: '#/responses/422UnprocessableEntityResponse'
  '/stages':
    get:
      tags:
        - admins
      summary: Return all approval stages
      description: Return all approval stages
      operationId: fetchStages
      parameters:
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/offset'
      responses:
        '200':
          description: Success
          headers:
            X-total-count:
              type: integer
              description: Total number of items
          schema:
            type: array
            items:
              $ref: '#/definitions/Stage'
        '400':
          $ref: '#/responses/400BadRequestResponse'
        '401':
          $ref: '#/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/responses/403ForbiddenResponse'
        '404':
          $ref: '#/responses/404NotFoundResponse'
        '422':
          $ref: '#/responses/422UnprocessableEntityResponse'
  '/requests/{request_id}/stages':
    get:
      tags:
        - users
      summary: Return an array of stages by given request id
      description: Return an array of stages by given request id
      operationId: fetchRequestStages
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/request_id'
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/Stage'
        '400':
          $ref: '#/responses/400BadRequestResponse'
        '401':
          $ref: '#/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/responses/403ForbiddenResponse'
        '404':
          $ref: '#/responses/404NotFoundResponse'
        '422':
          $ref: '#/responses/422UnprocessableEntityResponse'
  '/stages/{id}':
    get:
      tags:
        - admins
        - approvers
      summary: Return an approval stage by given id
      description: Return an approval stage by given id
      operationId: fetchStageById
      parameters:
        - $ref: '#/parameters/id'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Stage'
        '400':
          $ref: '#/responses/400BadRequestResponse'
        '401':
          $ref: '#/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/responses/403ForbiddenResponse'
        '404':
          $ref: '#/responses/404NotFoundResponse'
        '422':
          $ref: '#/responses/422UnprocessableEntityResponse'
  '/templates':
    get:
      tags:
        - admins
      summary: Return all templates
      description: Return all templates
      operationId: fetchTemplates
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/offset'
      responses:
        '200':
          description: Success
          headers:
            X-total-count:
              type: integer
              description: Total number of items
          schema:
            type: array
            items:
              $ref: '#/definitions/Template'
        '400':
          $ref: '#/responses/400BadRequestResponse'
        '401':
          $ref: '#/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/responses/403ForbiddenResponse'
        '404':
          $ref: '#/responses/404NotFoundResponse'
        '422':
          $ref: '#/responses/422UnprocessableEntityResponse'
  '/templates/{id}':
    get:
      tags:
        - admins
      summary: Return a template by given id
      description: Return a template by given id
      operationId: fetchTemplateById
      parameters:
        - $ref: '#/parameters/id'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Template'
        '400':
          $ref: '#/responses/400BadRequestResponse'
        '401':
          $ref: '#/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/responses/403ForbiddenResponse'
        '404':
          $ref: '#/responses/404NotFoundResponse'
        '422':
          $ref: '#/responses/422UnprocessableEntityResponse'
  '/workflows':
    get:
      tags:
        - admins
      summary: Return all approval workflows
      description: Return all approval workflows
      operationId: fetchWorkflows
      parameters:
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/offset'
      responses:
        '200':
          description: Success
          headers:
            X-total-count:
              type: integer
              description: Total number of items
          schema:
            type: array
            items:
              $ref: '#/definitions/Workflow'
        '400':
          $ref: '#/responses/400BadRequestResponse'
        '401':
          $ref: '#/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/responses/403ForbiddenResponse'
        '404':
          $ref: '#/responses/404NotFoundResponse'
        '422':
          $ref: '#/responses/422UnprocessableEntityResponse'
  '/templates/{template_id}/workflows':
    get:
      tags:
        - admins
      summary: Return an array of workflows by given template id
      description: Return an array of workflows by given template id
      operationId: fetchTemplateWorkflows
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/template_id'
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/offset'
      responses:
        '200':
          description: Success
          headers:
            X-total-count:
              type: integer
              description: Total number of items
          schema:
            type: array
            items:
              $ref: '#/definitions/Workflow'
        '400':
          $ref: '#/responses/400BadRequestResponse'
        '401':
          $ref: '#/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/responses/403ForbiddenResponse'
        '404':
          $ref: '#/responses/404NotFoundResponse'
        '422':
          $ref: '#/responses/422UnprocessableEntityResponse'
    post:
      tags:
        - admins
      summary: Add a workflow by given template id
      description: Add a workflow by given template id
      operationId: addWorkflow
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/template_id'
        - in: body
          name: body
          description: Parameters need to create workflow
          required: true
          schema:
            $ref: '#/definitions/WorkflowParameters'
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/Workflow'
        '400':
          $ref: '#/responses/400BadRequestResponse'
        '401':
          $ref: '#/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/responses/403ForbiddenResponse'
        '404':
          $ref: '#/responses/404NotFoundResponse'
        '422':
          $ref: '#/responses/422UnprocessableEntityResponse'
  '/workflows/{id}':
    get:
      tags:
        - admins
      summary: Return an approval workflow by given id
      description: Return an approval workflow by given id
      operationId: fetchWorkflowById
      parameters:
        - $ref: '#/parameters/id'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Workflow'
        '400':
          $ref: '#/responses/400BadRequestResponse'
        '401':
          $ref: '#/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/responses/403ForbiddenResponse'
        '404':
          $ref: '#/responses/404NotFoundResponse'
        '422':
          $ref: '#/responses/422UnprocessableEntityResponse'
    patch:
      tags:
        - admins
      summary: Update an approval workflow by given id
      description: Update an approval workflow by given id
      operationId: updateWorkflow
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/id'
        - in: body
          name: body
          description: Parameters need to update approval workflow
          required: true
          schema:
            $ref: '#/definitions/Workflow'
      responses:
        '400':
          $ref: '#/responses/400BadRequestResponse'
        '401':
          $ref: '#/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/responses/403ForbiddenResponse'
        '404':
          $ref: '#/responses/404NotFoundResponse'
        '422':
          $ref: '#/responses/422UnprocessableEntityResponse'
    delete:
      tags:
        - admins
      summary: Delete approval workflow by given id
      description: Delete approval workflow by given id
      operationId: removeWorkflow
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/id'
      responses:
        '400':
          $ref: '#/responses/400BadRequestResponse'
        '401':
          $ref: '#/responses/401UnauthorizedResponse'
        '403':
          $ref: '#/responses/403ForbiddenResponse'
        '404':
          $ref: '#/responses/404NotFoundResponse'
        '422':
          $ref: '#/responses/422UnprocessableEntityResponse'
securityDefinitions:
  APIKey_auth:
    type: apiKey
    in: header
    name: x-rh-auth-identity
    description: >-
      This is a base64 encoded string of a collection of attributes, that
      identify a user. This token is needed when accessing the API internally.
security:
  - APIKey_auth: []
definitions:
  Action:
    type: object
    description: Action is kind of like processing record. Each stage may have many actions before final decision.
    required:
      - processed_by
      - stage
    properties:
      id:
        type: string
        readOnly: true
      processed_by:
        type: string
        description: Processor info who perform the action
      operation:
        $ref: '#/definitions/Operation'
      comments:
        type: string
        description: Comments for action
        readOnly: true
      created_at:
        type: string
        format: date-time
        description: Timestamp of creation
        readOnly: true
  Decision:
    type: string
    description: Final decision, may be one of the value (undecided, approved, or denied)
    enum:
      - undecided
      - approved
      - denied
    default: undecided
  Group:
    type: object
    description: Approver groups. Each group may have one or many approvers. The first response from any approver will
      be treated as group response.
    required:
      - name
      - contact_method
      - contact_setting
    properties:
      id:
        type: string
        readOnly: true
      name:
        type: string
        description: Group name
      contact_method:
        type: string
        description: Contact type. It may be email, slack, team, etc. So far only email is supported.
        example: email
      contact_setting:
        type: object
        description: JSON object with contact Setting
  Operation:
    type: string
    description: Types of action, may be one of the value (approve, deny, notify, memo, or skip). The stage will be updated according to the operation.
    enum:
      - approve
      - deny
      - notify
      - memo
      - skip
    default: memo
  Request:
    type: object
    description: Approval request. Each request will associate with a workflow. Corresponding to the groups of the associated workflow, every request will have a list of stages to record the request processing details.
    required:
      - requester
      - name
      - content
    properties:
      id:
        type: string
        readOnly: true
      requester:
        type: string
        description: Requester info
      name:
        type: string
        description: Request name
      description:
        type: string
        description: Request description
      state:
        $ref: '#/definitions/State'
      decision:
        $ref: '#/definitions/Decision'
      reason:
        type: string
        description: Comments for requests
        readOnly: true
      content:
        type: object
        description: JSON object with request content
      workflow_id:
        type: string
        description: Associate workflow id
        readOnly: true
  Stage:
    type: object
    description: The stage of approval request.
    required:
      - group_id
    properties:
      id:
        type: string
        readOnly: true
      state:
        $ref: '#/definitions/State'
      decision:
        $ref: '#/definitions/Decision'
      comments:
        type: string
        description: Approval stage
      group_id:
        type: string
        description: Associated group id
      request_id:
        type: string
        description: Associated request id
        readOnly: true
  State:
    type: string
    description: The state of stage or request. It may be one of values (pending, skipped, notified or finished)
    enum:
      - pending
      - skipped
      - notified
      - finished
    default: pending
  Template:
    type: object
    description: The template to categorize workflows.
    required:
      - title
    properties:
      id:
        type: string
        readOnly: true
      title:
        type: string
      description:
        type: string
  Workflow:
    type: object
    description: The workflow to process approval requests. Each workflow should link with a list of groups, in order to process approval requests.
    required:
      - name
    properties:
      id:
        type: string
        readOnly: true
      name:
        type: string
      description:
        type: string
      template_id:
        type: string
        description: Associated template id
        readOnly: true
  WorkflowParameters:
    type: object
    description: Parameters to create a workflow
    required:
      - name
      - group_ids
    properties:
      name:
        type: string
      description:
        type: string
      group_ids:
        type: array
        items:
          type:
            integer
parameters:
  id:
    name: id
    in: path
    description: Query by id
    required: true
    type: integer
  template_id:
    name: template_id
    in: path
    description: Id of template
    required: true
    type: integer
  workflow_id:
    name: workflow_id
    in: path
    description: Id of workflow
    required: true
    type: integer
  group_id:
    name: group_id
    in: path
    description: Id of group
    required: true
    type: integer
  request_id:
    name: request_id
    in: path
    description: Id of request
    required: true
    type: integer
  stage_id:
    name: stage_id
    in: path
    description: Id of stage
    required: true
    type: integer
  limit:
    name: limit
    in: query
    description: How many items to return at one time (max 1000)
    required: false
    type: integer
    format: int32
    minimum: 20
    maximum: 100
    default: 20
  offset:
    name: offset
    in: query
    description: Starting Offset
    required: false
    type: integer
    format: int32
    default: 0
    minimum: 0
  state:
    name: state
    in: query
    description: Fetch item by given state (pending, skipped, notified, finished)
    required: false
    type: array
    items:
      type: string
      enum:
        - pending
        - skipped
        - notified
        - finished
  decision:
    name: decision
    in: query
    description: Fetch item by given decision (undecided, approved, denied)
    required: false
    type: array
    items:
      type: string
      enum:
        - undecided
        - approved
        - denied
  requester:
    name: requester
    in: query
    description: Fetch item by given requester
    required: false
    type: string
responses:
  400BadRequestResponse:
    description: Bad request
  401UnauthorizedResponse:
    description: Caller is not authorized to access the resource.
  403ForbiddenResponse:
    description: Caller is forbidden to perform the action.
  404NotFoundResponse:
    description: The requested resource is not found.
  422UnprocessableEntityResponse:
    description: The required paramters are either invalid or missed.
  DefaultUnexpectedResponse:
    description: An unexpected response.
externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
