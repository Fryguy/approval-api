swagger: '2.0'
info:
  title: Insights Service Approval APIs
  description: APIs to query approval service
  version: 1.0.0
host: 'localhost:3000'
tags:
  - name: admins
    description: Admin users
  - name: approvers
    description: User with approval privilege
  - name: users
    description: regular users
schemes:
  - https
  - http
paths:
  # Endpoints for actions
  '/actions':
    get:
      tags:
        - admins
        - approvers
      summary: Returns list of approver actions
      description: Returns a list of approver actions
      operationId: fetchActions
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/offset'
      responses:
        '200':
          description: successful operation
          headers:
            X-total-count:
              type: integer
              description: Total number of items
          schema:
            type: array
            items:
              $ref: '#/definitions/Action'
      security:
        - approval_auth: []
  '/stages/{stage_id}/actions':
    post:
      tags:
        - admins
        - approvers
      summary: Add an action
      description: Add an action
      operationId: addAction
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/stage_id'
        - in: body
          name: body
          description: Action object that will be added
          required: true
          schema:
            $ref: '#/definitions/Action'
      responses:
        '201':
          description: successful operation
          schema:
            $ref: '#/definitions/Action'
        '405':
          description: Invalid input
      security:
        - approval_auth: []
  '/actions/{id}':
    get:
      tags:
        - admins
        - approvers
      summary: Finds approver action by id
      description: Finds approver action by id
      operationId: fetchActionById
      parameters:
        - $ref: '#/parameters/id'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Action'
        '404':
          description: The approver action does not exist.
    put:
      tags:
        - admins
        - approvers
      summary: Update an existing action
      description: Update an existing action
      operationId: updateAction
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/id'
        - in: body
          name: body
          description: Action object that needs to be updated
          required: true
          schema:
            $ref: '#/definitions/Action'
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Action not found
        '405':
          description: Validation exception
      security:
        - approval_auth: []
    delete:
      tags:
        - admins
        - approvers
      summary: Delete action by id
      description: Delete action by id
      operationId: removeAction
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/id'
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Action not found
  # Endpoints for groups
  '/groups':
    get:
      tags:
        - admins
      summary: Returns list of approver groups
      description: Returns a list of approver groups
      operationId: fetchGroups
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/offset'
      responses:
        '200':
          description: successful operation
          headers:
            X-total-count:
              type: integer
              description: Total number of items
          schema:
            type: array
            items:
              $ref: '#/definitions/Group'
      security:
        - approval_auth: []
    post:
      tags:
        - admins
      summary: Add a new approver group
      description: Add a new approver group
      operationId: addGroup
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Approver group object that needs to be added to the orgnization
          required: true
          schema:
            $ref: '#/definitions/Group'
      responses:
        '201':
          description: successful operation
          schema:
            $ref: '#/definitions/Group'
        '405':
          description: Invalid input
      security:
        - approval_auth: []
  '/groups/{id}':
    get:
      tags:
        - admins
      summary: Finds approver group by id
      description: Finds approver group by id
      operationId: fetchGroupById
      parameters:
        - $ref: '#/parameters/id'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Group'
        '404':
          description: The approver group does not exist.
    put:
      tags:
        - admins
      summary: Update an existing approver group
      description: Update an existing approver group
      operationId: updateGroup
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/id'
        - in: body
          name: body
          description: Approver group object that needs to be updated
          required: true
          schema:
            $ref: '#/definitions/Group'
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Approver group not found
        '405':
          description: Validation exception
      security:
        - approval_auth: []
    delete:
      tags:
        - admins
      summary: Delete approver group by id
      description: Delete group
      operationId: removeGroup
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/id'
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Group not found
  # Endpoints for requests
  '/requests':
    get:
      tags:
        - admins
      summary: List approval requests
      description: List requests
      operationId: fetchRequests
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/decision'
        - $ref: '#/parameters/state'
        - $ref: '#/parameters/requester'
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/offset'
      responses:
        '200':
          description: successful operation
          headers:
            X-total-count:
              type: integer
              description: Total number of items
          schema:
            type: array
            items:
              $ref: '#/definitions/Request'
  '/workflows/{workflow_id}/requests':
    get:
      tags:
        - admins
      summary: List of all approval requests
      description: Returns a list of approval requests
      operationId: fetchWorkflowRequests
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/workflow_id'
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/offset'
      responses:
        '200':
          description: successful operation
          headers:
            X-total-count:
              type: integer
              description: Total number of items
          schema:
            type: array
            items:
              $ref: '#/definitions/Request'
      security:
        - approval_auth: []
    post:
      tags:
        - users
      summary: Add a new approval request
      description: request creation may not be via rest
      operationId: addRequest
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/workflow_id'
        - in: body
          name: body
          description: Approval request object that needs to be added
          required: true
          schema:
            $ref: '#/definitions/Request'
      responses:
        '201':
          description: successful operation
          schema:
            $ref: '#/definitions/Request'
        '405':
          description: Invalid input
      security:
        - approval_auth: []
  '/requests/{id}':
    get:
      tags:
        - users
      summary: Retrieves approval request by given id
      description: Query approval request by given id
      operationId: fetchRequestById
      parameters:
        - $ref: '#/parameters/id'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Request'
        '404':
          description: The approval request does not exist.
    put:
      tags:
        - admins
      summary: Update an existing approval request status
      description: Update request status
      operationId: updateRequest
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/id'
        - in: body
          name: body
          description: new status
          required: true
          schema:
            $ref: '#/definitions/Request'
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Approval request not found
        '405':
          description: Validation exception
      security:
        - approval_auth: []
    delete:
      tags:
        - admins
      summary: Delete approval request by id
      description: Delete approval request by id
      operationId: removeRequest
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/id'
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Request not found
  # Endpoints about stages
  '/stages':
    get:
      tags:
        - admins
      summary: List approval stages
      description: List all approval stages
      operationId: fetchStages
      parameters:
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/offset'
      responses:
        '200':
          description: successful operation
          headers:
            X-total-count:
              type: integer
              description: Total number of items
          schema:
            type: array
            items:
              $ref: '#/definitions/Stage'
  '/requests/{request_id}/stages':
    get:
      tags:
        - users
      summary: Returns stages by given request id
      description: Returns stages by request id
      operationId: fetchRequestStages
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/request_id'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Stage'
      security:
        - approval_auth: []
    post:
      tags:
        - admins
      summary: Add a new stage
      description: Add stage
      operationId: addStage
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/request_id'
        - in: body
          name: body
          description: Stage that needs to be added
          required: true
          schema:
            $ref: '#/definitions/Stage'
      responses:
        '201':
          description: successful operation
          schema:
            $ref: '#/definitions/Stage'
        '405':
          description: Invalid input
      security:
        - approval_auth: []
  '/stages/{id}':
    get:
      tags:
        - admins
        - approvers
      summary: Retrieves approval stages by given id
      description: Get stage by given id
      operationId: fetchStageById
      parameters:
        - $ref: '#/parameters/id'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Request'
        '404':
          description: The approval request does not exist.
    put:
      tags:
        - admins
        - approvers
      summary: Update an existing approval stage
      description: Update stage
      operationId: updateStage
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/id'
        - in: body
          name: body
          description: new stage
          required: true
          schema:
            $ref: '#/definitions/Stage'
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Approval request not found
        '405':
          description: Validation exception
      security:
        - approval_auth: []
    delete:
      tags:
        - admins
      summary: Delete approval stage by id
      description: Delete approval stage
      operationId: removeStage
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/id'
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Request not found
  # Endpoints for templates
  '/templates':
    get:
      tags:
        - admins
      summary: Returns list of templates
      description: Returns list of templates
      operationId: fetchTemplates
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/offset'
      responses:
        '200':
          description: successful operation
          headers:
            X-total-count:
              type: integer
              description: Total number of items
          schema:
            type: array
            items:
              $ref: '#/definitions/Template'
      security:
        - approval_auth: []
    post:
      tags:
        - admins
      summary: Add a new template to the orgnization
      description: Add template
      operationId: addTemplate
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Approval template object that needs to be added to the orgnization
          required: true
          schema:
            $ref: '#/definitions/Template'
      responses:
        '201':
          description: successful operation
          schema:
            $ref: '#/definitions/Template'
        '405':
          description: Invalid input
      security:
        - approval_auth: []
  '/templates/{id}':
    get:
      tags:
        - admins
      summary: Finds template by id
      description: Find template by given id
      operationId: fetchTemplateById
      parameters:
        - $ref: '#/parameters/id'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Template'
        '404':
          description: The template does not exist.
    put:
      tags:
        - admins
      summary: Update an existing template
      description: Update template
      operationId: updateTemplate
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/id'
        - in: body
          name: body
          description: Template needs to be updated
          required: true
          schema:
            $ref: '#/definitions/Template'
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Template not found
        '405':
          description: Validation exception
      security:
        - approval_auth: []
    delete:
      tags:
        - admins
      summary: Delete template by id
      description: Delete template by id
      operationId: removeTemplate
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/id'
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Template not found
  # Endpoints for workflows
  '/workflows':
    get:
      tags:
        - admins
      summary: List all approval workflows
      description: List all approval workflows
      operationId: fetchWorkflows
      parameters:
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/offset'
      responses:
        '200':
          description: successful operation
          headers:
            X-total-count:
              type: integer
              description: Total number of items
          schema:
            type: array
            items:
              $ref: '#/definitions/Workflow'
  '/templates/{template_id}/workflows':
    get:
      tags:
        - admins
      summary: Returns list of workflows by given template id
      description: Returns a list of workflows
      operationId: fetchTemplateWorkflows
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/template_id'
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/offset'
      responses:
        '200':
          description: successful operation
          headers:
            X-total-count:
              type: integer
              description: Total number of items
          schema:
            type: array
            items:
              $ref: '#/definitions/Workflow'
      security:
        - approval_auth: []
    post:
      tags:
        - admins
      summary: Add a new workflow
      description: Add workflow
      operationId: addWorkflow
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/template_id'
        - in: body
          name: body
          description: Workflow that needs to be added
          required: true
          schema:
            $ref: '#/definitions/Workflow'
      responses:
        '201':
          description: successful operation
          schema:
            $ref: '#/definitions/Workflow'
        '405':
          description: Invalid input
      security:
        - approval_auth: []
  '/workflows/{id}':
    get:
      tags:
        - admins
      summary: List approval workflow by id
      description: Display workflow by given id
      operationId: fetchWorkflowById
      parameters:
        - $ref: '#/parameters/id'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Workflow'
      security:
        - approval_auth: []
    put:
      tags:
        - admins
      summary: Update an existing approval workflow
      description: Update approval workflow
      operationId: updateWorkflow
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/id'
        - in: body
          name: body
          description: Approval workflow object that needs to be updated
          required: true
          schema:
            $ref: '#/definitions/Workflow'
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Approval workflow not found
        '405':
          description: Validation exception
      security:
        - approval_auth: []
    delete:
      tags:
        - admins
      summary: Delete approval workflow by id
      description: Delete approval workflow by id
      operationId: removeWorkflow
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/id'
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Workflow not found
securityDefinitions:
  approval_auth:
    type: basic
definitions:
  Action:
    type: object
    required:
      - processed_by
      - stage
    properties:
      id:
        type: string
        readOnly: true
      processed_by:
        type: string
        description: Person to process the action
      actioned_at:
        type: string
        format: date-time
        description: Timestamp of action be processed
        readOnly: true
      notified_at:
        type: string
        format: date-time
        description: Timestamp of action be notified
        readOnly: true
      state:
        $ref: '#/definitions/State'
      decision:
        $ref: '#/definitions/Decision'
      comments:
        type: string
        description: Comments about the action
        readOnly: true
  Decision:
    type: string
    description: may be one of (unknown, approved, or denied)
    enum:
      - unknown
      - approved
      - denied
    default: unknown
  Group:
    type: object
    required:
      - name
      - contact_method
      - contact_setting
    properties:
      id:
        type: string
        readOnly: true
      name:
        type: string
        description: Group name
      contact_method:
        type: string
        description: Contact type
      contact_setting:
        type: string
        description: Settings of contact
  Request:
    type: object
    required:
      - requester
      - name
      - content
    properties:
      id:
        type: string
        readOnly: true
      requester:
        type: string
        description: Requester info
      name:
        type: string
        description: Request name
      description:
        type: string
        description: Request description
      state:
        $ref: '#/definitions/State'
      decision:
        $ref: '#/definitions/Decision'
      reason:
        type: string
        description: Comments for requests
        readOnly: true
      content:
        type: string
        description: Request content
      workflow_id:
        type: string
        description: Associate workflow id
      stages:
        type: array
        items:
          $ref: '#/definitions/Stage'
  Stage:
    type: object
    required:
      - group_id
    properties:
      id:
        type: string
        readOnly: true
      group_id:
        type: integer
      state:
        $ref: '#/definitions/State'
      decision:
        $ref: '#/definitions/Decision'
      comments:
        type: string
        description: approval stage
      actions:
        type: array
        items:
          $ref: '#/definitions/Action'
      group_id:
        type: string
        description: Associated group id
      request_id:
        type: string
        description: Associated request id
  State:
    type: string
    description: may be one of (pending, skipped, notified or finished)
    enum:
      - pending
      - skipped
      - notified
      - finished
    default: pending
  Template:
    type: object
    required:
      - title
    properties:
      id:
        type: string
        readOnly: true
      title:
        type: string
      description:
        type: string
  Workflow:
    type: object
    required:
      - name
    properties:
      id:
        type: string
        readOnly: true
      name:
        type: string
      description:
        type: string
      template_id:
        type: string
        description: Associated template id
      group_ids:
        type: array
        items:
          type: string
parameters:
  id:
    name: id
    in: path
    description: query by id
    required: true
    type: integer
  template_id:
    name: template_id
    in: path
    description: id of template
    required: true
    type: integer
  workflow_id:
    name: workflow_id
    in: path
    description: id of workflow
    required: true
    type: integer
  group_id:
    name: group_id
    in: path
    description: id of group
    required: true
    type: integer
  request_id:
    name: request_id
    in: path
    description: id of request
    required: true
    type: integer
  stage_id:
    name: stage_id
    in: path
    description: id of stage
    required: true
    type: integer
  limit:
    name: limit
    in: query
    description: How many items to return at one time (max 1000)
    required: false
    type: integer
    format: int32
    minimum: 20
    maximum: 100
    default: 20
  offset:
    name: offset
    in: query
    description: Starting Offset
    required: false
    type: integer
    format: int32
    default: 0
    minimum: 0
  state:
    name: state
    in: query
    description: 'fetch item by given state (pending, skipped, notified, finished)'
    required: false
    type: array
    items:
      type: string
      enum:
        - pending
        - skipped
        - notified
        - finished
  decision:
    name: decision
    in: query
    description: 'fetch item by given decision (unknown, approved, denied)'
    required: false
    type: array
    items:
      type: string
      enum:
        - unknown
        - approved
        - denied
  requester:
    name: requester
    in: query
    description: fetch item by given requester
    required: false
    type: string
externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
